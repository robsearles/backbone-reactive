// # Dashboard View

'use strict';
var Backbone; // hello jslint
var $; // hello jslint

// ## Shared Date Functions
// Utility class for date functionality
var DateFunctions = {
  // convert a timestamp into a JavaScript Date Object
  getDate: function (timestamp) {
    return new Date(parseInt(timestamp, 10));
  },

  // Format a Javascript Date Object into a more readable date string
  getDateNice: function (date) {
    return date.toLocaleDateString();
  },

  // Format a Javascript Date Object into a more readable time string
  getTimeNice: function (date) {
    return this.padTime(date.getHours()) + ':' + this.padTime(date.getMinutes());
  },

  // Format a Javascript Date Object into a more readable date and
  // time string
  getDateAndTimeNice: function (date) {
    return this.getDateNice(date) + " " + this.getTimeNice(date);
  },

  // ### Pad Time
  // A very simple function to ensure that if the hours or minutes
  // contain a single digit, pad it out. Eg: 9 becomes 09
  padTime: function (time) {
    if (time < 10) {
      return '0' + time;
    }
    return time;
  }
};

// ## Define the List Item Model
var ListItem = Backbone.Model.extend({
  url: function () {
    return '/mock-data/message.' + this.id + '.json';
  }
});


var UserView = Backbone.View.extend({
  className: 'user-details',

  render: function () {
    var html = '<h2>User Details</h2><p>Welcome Rob Searles</p>';
    this.$el.html(html);
    return this.el;
  }
});

var MessageView = Backbone.View.extend({
  className: 'message',

  initialize: function () {
    // for the sake of this demo, we know the latest message is number 5
    this.model = new ListItem({id: 5});
  },

  loadMessage: function (callback) {
    var self = this;
    self.model.fetch({success: function () {
      self.render();
      callback(self.el);
    }});
  },

  render: function () {
    var date = DateFunctions.getDate(this.model.get('date'));
    var dateNice = DateFunctions.getDateAndTimeNice(date);

    var html = '<h2>Latest Message</h2>' + 
      '<p><label>From</label> ' + this.model.get('from') + '</p>' +
      '<p><label>Date</label> ' + dateNice + '</p>' +
      '<p><label>Subject</label> ' + this.model.get('subject') + '</p>' +
      '<p>' + this.model.get('body') + '</p>';
    this.$el.html(html);
    return this.el;
  }
});

var DashboardView = Backbone.View.extend({

  // ### Initialise the View
  initialize: function () {
    this.render();
  },

  // ### Render this View
  render: function () {
    var self = this;
    var html = '<h1>Backbone Reactive Dashboard</h1> ' +
      '<p>This is generated by JavaScript.</p>';
    self.$el.html(html);

    var userDetails = new UserView();
    self.$el.append(userDetails.render());

    var messageView = new MessageView();
    messageView.loadMessage(function(el) {
      self.$el.append(el);
    });
  },
});

var dashboardView = new DashboardView({
  el: $('#content')
});